import matplotlib.pyplot as plt
import pandas as pd
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from matplotlib import animation
import sys
sys.path.insert(0, '')
from src.load import read_graph
'''
This file takes as input a .csv file generated by the graph_influence.py 
script and produces a plot in three dimensions showing the relationship/correlation between the three objective functions.


'''

def plot(x2,y2,z2):
    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(8,3))
    fig.suptitle("IC", size=16)

    ax1.scatter(z2,x2)
    ax1.xaxis.set_ticks(np.arange(0,max(z2), 5))
    ax1.yaxis.set_ticks(np.arange(0, max(x2), 0.5))
    ax1.set_ylabel("Nodes")

    ax1.set_xlabel("Influence")
    fig.suptitle("IC", size=16)
    
    ax2.scatter(y2,x2)
    ax2.yaxis.set_ticks(np.arange(0,max(x2), 0.5))
    ax2.xaxis.set_ticks(np.arange(0, max(y2)+1, 1))
    
    ax2.set_ylabel("Nodes")
    ax3.scatter(z2,y2)
    ax3.xaxis.set_ticks(np.arange(0,max(z2), 5))
    ax3.yaxis.set_ticks(np.arange(0, max(y2)+2, 1))
    ax3.set_ylabel("Nodes")

    ax3.set_xlabel("")
    ax2.set_xlabel("Communities")

    ax1.set_box_aspect(1)
    ax2.set_box_aspect(1)
    ax3.set_box_aspect(1)
    fig.tight_layout()
    plt.show()
if __name__ == '__main__':
    
    filename = "facebook_combined_TRUE-4-k25-p0-WC-degree.csv"
    graph = "scale_graphs/facebook_combined.txt_TRUE-4.txt"

    G = read_graph(graph)
    N = G.number_of_nodes()
    my_degree_function = G.degree   
    mean = []
    for item in G:
        mean.append(my_degree_function[item])

    print(np.mean(mean))

    df = pd.read_csv(filename, sep=",")

    x=  df["n_nodes"]
    y = df["communities"]
    z = df["influence"]
    time = df["time"]
    for i in range(len(z)):
        z[i] = (z[i]/N) * 100
        x[i] = (x[i]/N) * 100
    
    plot(x,y,z)
    filename = "facebook/facebook_combined_False-2-k50-p0-WC-degree.csv"  
    graph = "scale_graphs/facebook_combined.txt_False-2.txt"

    G = read_graph(graph)
    N = G.number_of_nodes()
    my_degree_function = G.degree   
    mean = []
    for item in G:
        mean.append(my_degree_function[item])

    print(np.mean(mean))
    df = pd.read_csv(filename, sep=",")

    x0= df["n_nodes"].to_list()
    y0 = df["communities"].to_list()
    z0 = df["influence"].to_list()
    time0 = df["time"]
    for i in range(len(z0)):
        z0[i] = (z0[i]/N) * 100
        x0[i] = (x0[i]/N) * 100
    

    plot(x0,y0,z0)

    filename = "facebook_combined_TRUE-4-k25-p0-WC-degree.csv" 
    graph = "scale_graphs/lastf_asia.txt_True-1.33.txt"

    G = read_graph(graph)
    N = G.number_of_nodes()
    my_degree_function = G.degree   
    mean = []
    for item in G:
        mean.append(my_degree_function[item])

    print(np.mean(mean))
    df = pd.read_csv(filename, sep=",")

    x1= df["n_nodes"]
    y1 = df["communities"]
    z1 = df["influence"]
    time1 = df["time"]
    for i in range(len(z1)):
        z1[i] = (z1[i]/N) * 100
        x1[i] = (x1[i]/N) * 100
    



    plot(x1,y1,z1)

    filename = "facebook/facebook_combined-k100-p0-WC-degree.csv"  
    graph = "graphs/facebook_combined.txt"

    G = read_graph(graph)
    N = G.number_of_nodes()
    my_degree_function = G.degree   
    mean = []
    for item in G:
        mean.append(my_degree_function[item])

    print(np.mean(mean))

    df = pd.read_csv(filename, sep=",")

    x2= df["n_nodes"]
    y2 = df["communities"]
    z2 = df["influence"]
    time2= df["time"]
    for i in range(len(z2)):
        z2[i] = (z2[i]/N) * 100
        x2[i] = (x2[i]/N) * 100
    

    plot(x2,y2,z2)

    plt.scatter(z,x,color="green",label="25%")
    #plt.scatter(z0,x0,color="blue", label="50%")
    #plt.scatter(z1,x1,color="orange",label="75%")
    plt.scatter(z2,x2,color="red",label="100%")
    plt.title('Facebook WC model')
    plt.xlabel('% Influenced Nodes')
    plt.ylabel('% Nodes as seed set')
    plt.legend()
    plt.show()


    print(np.mean(time),np.mean(time0),np.mean(time1),np.mean(time2))
    print(max(time),max(time0),max(time1),max(time2))
    print(min(time),min(time0),min(time1),min(time2))


    times = [np.mean(time),np.mean(time0),np.mean(time2)]
    print(times)


    x = [25, 50,100]

    times = [np.mean(time),np.mean(time0),np.mean(time2)]

    std = [np.std(time),np.std(time0),np.std(time2)]

    print(times)
    x = [25, 50, 100]

    plt.errorbar(x, times, std, linestyle='None', marker='o')
    plt.xlabel('Graph')
    plt.ylabel('Time')
    plt.title('Facebook Combined IC')
    plt.show()

    plt.plot(x, times, marker='*')
    plt.xlabel('Graph')
    plt.ylabel('Time')
    plt.title('facebook_L1 WC')
    plt.show()

    