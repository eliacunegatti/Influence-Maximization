import matplotlib.pyplot as plt
import pandas as pd
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import matplotlib
import os
from matplotlib import animation
'''
This file takes as input a .csv file generated by the graph_influence.py 
script and produces a plot in three dimensions showing the relationship/correlation between the three objective functions.


'''
#------------------------------------------------------#

#functions to save gif and mp4 format
def init():

    #surf = ax.plot_trisurf(x1,y1,z1, cmap='viridis_r', linewidth=0,alpha = 0.99, edgecolor = 'k', norm=norm)
    #fig.colorbar(surf, shrink=0.5, aspect=5)
    return fig,

def animate(i):
    # azimuth angle : 0 deg to 360 deg
    ax.view_init(elev=10, azim=i*4)
    return fig,

# Animate
def save_video():
    ani = animation.FuncAnimation(fig, animate, init_func=init,
                                frames=90, interval=50, blit=True)

    fn = str(os.path.basename(filename))
    fn = fn.replace(".csv", "")
    #ani.save(fn+'.mp4',writer='ffmpeg',fps=1000/50)
    ani.save('gif/'+fn+'.gif',writer='imagemagick',fps=1000/50)

#------------------------------------------------------#

if __name__ == '__main__':
    
    filename = "graph_SBM_small-k100-p0.05-IC-communities.csv"  

    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(8,3))
    fig.suptitle("IC", size=16)

    df = pd.read_csv(filename, sep=",")

    x1= df["n_nodes"]
    y1 = df["time"]
    z1 = df["influence"]
    print(max(z1))
    ax1.scatter(z1,x1)
    ax1.xaxis.set_ticks(np.arange(0,df["influence"].max()+250, 200))
    ax1.yaxis.set_ticks(np.arange(0, df["n_nodes"].max()+1, 10))
    ax1.set_ylabel("Nodes")

    ax1.set_xlabel("Influence")


    ax2.scatter(y1, z1)
    ax2.xaxis.set_ticks(np.arange(0, df["time"].max()+1, 1))
    ax2.yaxis.set_ticks(np.arange(0,df["influence"].max()+250, 250))
    ax2.set_xlabel("No Communities")

    ax2.set_ylabel("Influence")
    
    ax3.scatter(y1,x1)
    ax3.yaxis.set_ticks(np.arange(0, df["n_nodes"].max()+1, 10))
    ax3.xaxis.set_ticks(np.arange(0,df["time"].max()+1, 1))
    ax3.set_xlabel("No Communities")

    ax3.set_ylabel("Nodes")

    ax1.set_box_aspect(1)
    ax2.set_box_aspect(1)
    ax3.set_box_aspect(1)
    fig.tight_layout()
    #uncomment to save the plot in .png format
    #fn = str(os.path.basename(filename))
    #fn = fn.replace(".csv", "")
    #plt.savefig('gif/{}.png'.format(fn))
    plt.show()

    exit(0)

    filename = "facebook_combined_scale_2-k50-p0.0459030556566024-LT.csv.csv"

    df = pd.read_csv(filename, sep=",")

    x2= df["n_nodes"]
    y2 = df["influence"]
    #plt.scatter(x2, y2)
    print(max(y2))
    #plt.show()

    plt.cla()
    final = [z1,y2]
    plt.boxplot(final)
    plt.title("Influence")
    plt.xlabel("Graph")
    plt.ylabel("Influence")
    plt.xticks([1, 2], ['#C', 'without #C'])
    plt.show()  
    #uncomment to save the plot in .gif  and .mp4 format
    #save_video()