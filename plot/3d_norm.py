import matplotlib.pyplot as plt
import pandas as pd
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from matplotlib import animation
import sys
sys.path.insert(0, '')
from src.load import read_graph
'''
This file takes as input a .csv file generated by the graph_influence.py 
script and produces a plot in three dimensions showing the relationship/correlation between the three objective functions.


'''

def plot(x2,y2,z2):
    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(8,3))
    fig.suptitle("IC", size=16)

    ax1.scatter(z2,x2)
    ax1.xaxis.set_ticks(np.arange(0,max(z2), 5))
    ax1.yaxis.set_ticks(np.arange(0, max(x2), 0.5))
    ax1.set_ylabel("Nodes")

    ax1.set_xlabel("Influence")
    fig.suptitle("IC", size=16)
    
    ax2.scatter(y2,x2)
    ax2.yaxis.set_ticks(np.arange(0,max(x2), 0.5))
    ax2.xaxis.set_ticks(np.arange(0, 100, 10))
    
    ax2.set_ylabel("Nodes")
    ax3.scatter(z2,y2)
    ax3.xaxis.set_ticks(np.arange(0,100, 5))
    ax3.yaxis.set_ticks(np.arange(0, max(y2)+2, 1))
    ax3.set_ylabel("Nodes")

    ax3.set_xlabel("")
    ax2.set_xlabel("Communities")

    ax1.set_box_aspect(1)
    ax2.set_box_aspect(1)
    ax3.set_box_aspect(1)
    fig.tight_layout()
    plt.show()
if __name__ == '__main__':
    
    filename = "graph_SBM_small_TRUE-8.0-k6-p0.05-IC-NEW_3_OBJ.csv"

    df = pd.read_csv(filename, sep=",")


    x=  df["n_nodes"].to_list()
    y = df["communities"]
    z = df["influence"]
    t = df["time"].to_list()
    time = sum(np.array(x) * np.array(t)) / sum(np.array(t))
    time = np.mean(t) / np.mean(x)
   
   
    filename = "graph_SBM_small_TRUE-4.0-k12-p0.05-IC-NEW_3_OBJ.csv"

    df = pd.read_csv(filename, sep=",")

    x0= df["n_nodes"].to_list()
    y0 = df["communities"].to_list()
    z0 = df["influence"].to_list()
    #time0 = df["time"]  / (1/np.mean(x0))
    t0= df["time"].to_list()
    time0 = sum(np.array(x0) * np.array(t0)) / sum(np.array(t0))
    time0 = np.mean(t0) / np.mean(x0)
  

    filename = "graph_SBM_small_TRUE-2.0-k25-p0.05-IC-NEW_3_OBJ.csv"


    df = pd.read_csv(filename, sep=",")

    x1= df["n_nodes"]
    y1 = df["communities"]
    z1 = df["influence"]
    #time1 = df["time"]  /(1/np.mean(x1))
    t1= df["time"].to_list()
    time1 = sum(np.array(x1) * np.array(t1)) / sum(np.array(t1))
    time1 = np.mean(t1) / np.mean(x1)


    #plot(x1,y1,z1)



    filename = "prova_IC.csv"
   

    df = pd.read_csv(filename, sep=",")

    x2= df["n_nodes"].to_list()
    y2 = df["communities"].to_list()
    z2 = df["influence"].to_list()
    #time2= df["time"]  / (1/np.mean(x2))
    t2= df["time"].to_list()
    time2 = sum(np.array(x2) * np.array(t2)) / sum(np.array(t2))
    time2 = np.mean(t2) / np.mean(x2)

    plt.scatter(z,x,color="green",label="25%")
    plt.scatter(z0,x0,color="blue", label="50%")
    plt.scatter(z1,x1,color="orange",label="75%")
    plt.scatter(z2,x2,color="red",label="100%")
    plt.title('Facebook Politicians IC p=0.01 model')
    plt.xlabel('% Influenced Nodes')
    plt.ylabel('% Nodes as seed set')
    plt.legend()
    #plt.xlim(0,100)
    plt.savefig('aa')
    #plt.show()
    plt.cla()



    plt.scatter(y,x,color="green",label="25%")
    plt.scatter(y0,x0,color="blue", label="50%")
    plt.scatter(y1,x1,color="orange",label="75%")
    plt.scatter(y2,x2,color="red",label="100%")
    plt.title('Facebook Politicians IC model')
    plt.xlabel('Communities')
    plt.ylabel('% Nodes as seed set')
    plt.legend()
    #plt.show()
    plt.savefig('aa_a')

    plt.cla()

    plt.scatter(z,y,color="green",label="25%")
    plt.scatter(z0,y0,color="blue", label="50%")
    plt.scatter(z1,y1,color="orange",label="75%")
    plt.scatter(z2,y2,color="red",label="100%")
    plt.title('Facebook Politicians IC model')
    plt.xlabel('% Influenced Nodes')
    plt.ylabel('Communities')
    plt.legend()
    plt.xlim(0,100)
    plt.savefig('aa_aa')

    #plt.show()
    plt.cla()
    exit(0)

    fig = plt.figure()
    ax = fig.add_subplot(projection='3d')
    ax.scatter(z, y, x, marker='o', color="green")
    ax.scatter(z0, y0, x0, marker='o', color="blue")
    ax.scatter(z1, y1, x1, marker='o', color="orange")
    ax.scatter(z2, y2, x2, marker='o', color="red")
    plt.show()

    # fig, ax = plt.subplots(subplot_kw={"projection": "3d"})


    # from matplotlib import cm
    # fig = plt.figure()
    # ax = Axes3D(fig)
    # ax.plot_trisurf(x, y, z, color="green",linewidth=0.1,shade=True)
    # ax.plot_trisurf(x0, y0, z0, color="blue",linewidth=0.1,shade=True)
    # ax.plot_trisurf(x2, y2, z2, color="red",linewidth=0.1,shade=True)

    # plt.show()





    print(time2, time1, time0, time)

    ## Time
    fig = plt.figure(1, figsize=(9, 6))

    ax = fig.add_subplot(111)

    data_plot = [t,t0,t1,t2]

    bp = ax.boxplot(data_plot)
    plt.xticks([1, 2, 3, 4], ['25%', '50%','75%', 'Original Graph'])
    fig.suptitle('Time LT SBM')
    plt.show()
    plt.cla()
    plt.close()


    