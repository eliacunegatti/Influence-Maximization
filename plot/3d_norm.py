import matplotlib.pyplot as plt
import pandas as pd
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from matplotlib import animation
import sys
sys.path.insert(0, '')
from src.load import read_graph
'''
This file takes as input a .csv file generated by the graph_influence.py 
script and produces a plot in three dimensions showing the relationship/correlation between the three objective functions.


'''

def plot(x2,y2,z2):
    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(8,3))
    fig.suptitle("IC", size=16)

    ax1.scatter(z2,x2)
    ax1.xaxis.set_ticks(np.arange(0,max(z2), 5))
    ax1.yaxis.set_ticks(np.arange(0, max(x2), 0.5))
    ax1.set_ylabel("Nodes")

    ax1.set_xlabel("Influence")
    fig.suptitle("IC", size=16)
    
    ax2.scatter(y2,x2)
    ax2.yaxis.set_ticks(np.arange(0,max(x2), 0.5))
    ax2.xaxis.set_ticks(np.arange(0, 100, 10))
    
    ax2.set_ylabel("Nodes")
    ax3.scatter(z2,y2)
    ax3.xaxis.set_ticks(np.arange(0,100, 5))
    ax3.yaxis.set_ticks(np.arange(0, max(y2)+2, 1))
    ax3.set_ylabel("Nodes")

    ax3.set_xlabel("")
    ax2.set_xlabel("Communities")

    ax1.set_box_aspect(1)
    ax2.set_box_aspect(1)
    ax3.set_box_aspect(1)
    fig.tight_layout()
    plt.show()
if __name__ == '__main__':
    
    filename = "experiments/deezerEU_8-IC/run-2.csv"

    df = pd.read_csv(filename, sep=",")


    x=  df["n_nodes"].to_list()
    y = df["communities"]
    z = df["influence"]

   
   
    filename = "experiments/deezerEU_4-IC/run-1.csv"

    df = pd.read_csv(filename, sep=",")

    x0= df["n_nodes"].to_list()
    y0 = df["communities"].to_list()
    z0 = df["influence"].to_list()

  

    filename = "experiments/deezerEU_2-IC/run-1.csv"


    df = pd.read_csv(filename, sep=",")

    x1= df["n_nodes"]
    y1 = df["communities"]
    z1 = df["influence"]




    filename = "experiments/CA-GrQc-IC/run-1.csv"
   

    df = pd.read_csv(filename, sep=",")

    x2= df["n_nodes"].to_list()
    y2 = df["communities"].to_list()
    z2 = df["influence"].to_list()


    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(10,6))

    ax1.scatter(z2,x2,color="red")
    ax1.scatter(z1,x1,color="orange")
    ax1.scatter(z0,x0,color="blue")
    ax1.scatter(z,x,color="green")

    #ax1.title('Facebook Politicians IC p=0.01 model')
    ax1.set_xlabel('% Influenced Nodes')
    ax1.set_ylabel('% Nodes as seed set')
    #ax1.legend()
    #Ã¥ax1.set_xlim(0,100)
    ax1.set_ylim(0,2.5)

    #ax1.savefig('aa')
    #ax1.show()
    #ax1.cla()



    ax2.scatter(y2,x2,color="red")
    ax2.scatter(y1,x1,color="orange")
    ax2.scatter(y0,x0,color="blue",)
    ax2.scatter(y,x,color="green")

    #ax2.title('Facebook Politicians IC model')
    ax2.set_xlabel('Communities')
    ax2.set_ylabel('% Nodes as seed set')
    ax1.set_ylim(0,2.5)
    #ax2.set_xlim(1,max(y2))
    #ax2.legend()
    #ax2.show()
    #ax2.savefig('aa_a')

    #plt.cla()

    ax3.scatter(z2,y2,color="red",label="Original")
    ax3.scatter(z1,y1,color="orange",label="1/2")
    ax3.scatter(z0,y0,color="blue", label="1/4")

    ax3.scatter(z,y,color="green",label="1/8")

    #ax3.title('Facebook Politicians IC model')
    ax3.set_xlabel('% Influenced Nodes')
    ax3.set_ylabel('Communities')
    #ax3.legend()
    #ax3.set_xlim(0,100)
    #ax3.savefig('aa_aa')
    #plt.legend(loc='center left')

    fig.legend(loc=7)
    fig.tight_layout()
    fig.subplots_adjust(right=0.85)  
    plt.savefig('ok_2')
    plt.show()
    #plt.cla()

    fig = plt.figure()
    ax = fig.add_subplot(projection='3d')
    ax.scatter(z, y, x, marker='o', color="green")
    ax.scatter(z0, y0, x0, marker='o', color="blue")
    ax.scatter(z1, y1, x1, marker='o', color="orange")
    ax.scatter(z2, y2, x2, marker='o', color="red")
    plt.savefig('aaa')
    plt.show()

    # fig, ax = plt.subplots(subplot_kw={"projection": "3d"})


    # from matplotlib import cm
    # fig = plt.figure()
    # ax = Axes3D(fig)
    # ax.plot_trisurf(x, y, z, color="green",linewidth=0.1,shade=True)
    # ax.plot_trisurf(x0, y0, z0, color="blue",linewidth=0.1,shade=True)
    # ax.plot_trisurf(x2, y2, z2, color="red",linewidth=0.1,shade=True)

    # plt.show()





    print(time2, time1, time0, time)

    ## Time
    fig = plt.figure(1, figsize=(9, 6))

    ax = fig.add_subplot(111)

    data_plot = [t,t0,t1,t2]

    bp = ax.boxplot(data_plot)
    plt.xticks([1, 2, 3, 4], ['25%', '1/4','1/8', 'Original Graph'])
    fig.suptitle('Time LT SBM')
    plt.show()
    plt.cla()
    plt.close()


    