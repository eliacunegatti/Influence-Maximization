import os 
import numpy as np
import pandas as pd
from matplotlib import markers
import matplotlib.pyplot as plt

'''
This file takes as input a .csv file generated by the graph_influence.py 
script and produces 3 plots in two dimensions showing the relationship/correlation between the three objective functions.

'''




if __name__ == '__main__':
   
    '''
    filename = "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small-k100-p0.05-IC.csv.csv"
    filename1_3 = "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small_scale_1.33-k75-p0.0665-IC.csv.csv"
    filename1_5 = "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small_scale_1.5-k66-p0.07500000000000001-IC.csv.csv"  
    filename2= "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small_scale_2-k50-p0.1-IC.csv.csv"
    filename3 = "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small_scale_3-k33-p0.15000000000000002-IC.csv.csv"
    filename4 = "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small_scale_4-k25-p0.2-IC.csv.csv"
    filename5 = "/Users/elia/Desktop/Experiments/sbm/graph_SBM_small_scale_5-k20-p0.25-IC.csv.csv"
    '''
    # filename = "facebook_combined-k100-p0.05-IC.csv.csv"
    # filename1_3 = "facebook_combined_scale_1.33-k75-p0.0665-IC.csv.csv"
    # filename1_5 = "facebook_combined_scale_1.5-k66-p0.07500000000000001-IC.csv.csv"  
    # filename2= "facebook_combined_scale_2-k50-p0.1-IC.csv.csv"
    # filename3 = "facebook_combined_scale_3-k33-p0.15000000000000002-IC.csv.csv"
    # filename4 = "facebook_combined_scale_4-k25-p0.2-IC.csv.csv"
    # filename5 = "facebook_combined_scale_5-k20-p0.25-IC.csv.csv"
    # filename = "/Users/elia/Desktop/Influence-Maximization/facebook_combined-k100-p0.02288800235736791-LT.csv.csv"
    # filename1_3 = "facebook_combined_scale_1.33-k75-p0.030493688188469887-LT.csv.csv"
    # filename1_5 = "facebook_combined_scale_1.5-k66-p0.03436781609195402-LT.csv.csv"  
    # filename2= "facebook_combined_scale_2-k50-p0.0459030556566024-LT.csv.csv"
    # filename3 = "facebook_combined_scale_3-k33-p0.06850433894844309-LT.csv.csv"
    # filename4 = "facebook_combined_scale_4-k25-p0.091599560761347-LT.csv.csv"
    # filename5 = "facebook_combined_scale_5-k20-p0.11329348135496727-LT.csv.csv"
    '''
    filename = "graph_SBM_small-k100-p0.05-IC.csv.csv"
    filename1_3 = "graph_SBM_small_scale_1.33-k75-p0.0665-IC.csv.csv"
    filename1_5 = "graph_SBM_small_scale_1.5-k66-p0.07500000000000001-IC.csv.csv"  
    filename2= "graph_SBM_small_scale_2-k50-p0.1-IC.csv.csv"
    filename3 = "graph_SBM_small_scale_3-k33-p0.15000000000000002-IC.csv.csv"
    filename4 = "graph_SBM_small_scale_4-k25-p0.2-IC.csv.csv"
    filename5 = "graph_SBM_small_scale_5-k20-p0.25-IC.csv.csv"


    filename = "graph_SBM_small-k100-p0.03603869088891971-LT.csv.csv"
    filename1_3 = "graph_SBM_small_scale_1.33-k75-p0.047874953936862794-LT.csv.csv"
    filename1_5 = "graph_SBM_small_scale_1.5-k66-p0.0541089999218078-LT.csv.csv"  
    filename2= "graph_SBM_small_scale_2-k50-p0.0722841225626741-LT.csv.csv"
    filename3 = "graph_SBM_small_scale_3-k33-p0.10850393700787402-LT.csv.csv"
    filename4 = "graph_SBM_small_scale_4-k25-p0.14446318156267565-LT.csv.csv"
    filename5 = "graph_SBM_small_scale_5-k20-p0.176038062283737-LT.csv.csv"
'''
    
    # filename = "facebook_combined-k100-p0.1-IC-second_attempt.csv"
    # filename1_3 = "facebook_combined_scale_1.33-k75-p0.13-IC-second_attempt.csv"
    # filename1_5 = "facebook_combined_scale_1.5-k66-p0.15-IC-second_attempt.csv"
    # filename2= "facebook_combined_scale_2-k50-p0.2-IC-second_attempt.csv"
    # filename3 = "facebook_combined_scale_3-k33-p0.3-IC-second_attempt.csv"
    # filename4 = "facebook_combined_scale_4-k25-p0.4-IC-second_attempt.csv"
    # filename5 = "facebook_combined_scale_5-k20-p0.5-IC-second_attempt.csv"
    filename = "graph_SBM_small-k100-p0.1-IC-second_attempt.csv"
    filename1_3 = "graph_SBM_small_scale_1.33-k75-p0.13-IC-second_attempt.csv"
    filename1_5 = "graph_SBM_small_scale_1.5-k66-p0.15-IC-second_attempt.csv"
    filename2= "graph_SBM_small_scale_2-k50-p0.2-IC-second_attempt.csv"
    filename3 = "graph_SBM_small_scale_3-k33-p0.3-IC-second_attempt.csv"
    filename4 = "graph_SBM_small_scale_4-k25-p0.4-IC-second_attempt.csv"
    filename5 = "graph_SBM_small_scale_5-k20-p0.5-IC-second_attempt.csv"
    
    df = pd.read_csv(filename)

    x = df["n_nodes"]
    z = df["influence"]
    #y = df["time"]



    df0 = pd.read_csv(filename1_3)

    x0 = df0["n_nodes"]
    z0 = df0["influence"]
    #y0 = df0["time"]

    df11 = pd.read_csv(filename1_5)
    x1 =df11["n_nodes"]
    z1 =df11["influence"]
    #y1 =df11["time"]

    df1 = pd.read_csv(filename2)
    x2 =df1["n_nodes"]
    z2 =df1["influence"]
    #y2 =df1["time"]

    df3 = pd.read_csv(filename3)
    x3 =df3["n_nodes"]
    z3 =df3["influence"]
    #y3 =df3["time"]

    df4 = pd.read_csv(filename4)
    x4 =df4["n_nodes"]
    z4 =df4["influence"]
    #y4 =df4["time"]
   
    df5 = pd.read_csv(filename5)
    x5 =df5["n_nodes"]
    z5 =df5["influence"]
    #y5 =df5["time"]

    plt.scatter(x, z, color="blue", label="original")
    plt.scatter(x0, z0, color='red',label="75%")
    plt.scatter(x1, z1, color='orange',label="66%")
    plt.scatter(x2, z2, color='grey',label="50%")
    plt.scatter(x3, z3, color='brown',label="33%")
    plt.scatter(x4, z4, color='purple',label="25%")
    plt.scatter(x5, z5, color='black',label="20%",)
    plt.legend()
    plt.title("Connected Scatterplot points with line")
    plt.xlabel("x")
    plt.ylabel("sinx")

    plt.show() 
    max = [max(z5),max(z4),max(z3),max(z2),max(z1),max(z0),max(z)]

    gt = []
    gt2 = []
    p = []
    t = [1,1.33,1.5,2,3,4,5]

    for i in range(len(t)):
        gt2.append(np.max(z)/t[i])

    #print(mean)
    print(max)

    gt2 = gt2[::-1]
    print(gt2)

    value = [20,25,33,50,66,75,100]
    
    fig = plt.figure()
    ax = plt.axes()  
    ax.plot(value, max, color="orange", label="max influence", marker='*')
    
    ax.plot(value, gt2, color="green", marker="o",label="ideal max")
    fig.suptitle("Max Influence LT", fontsize=16)
    plt.legend()
    plt.show()
    plt.cla()
    p = []
    for i in range(len(gt2)-1):
        print(gt2[i], max[i])
        if max[i]> gt2[i]:
            p.append((gt2[i]/max[i]))
        else:
            p.append((max[i]/gt2[i]))
    p_final = 1 - np.mean(p)
    print('Final {0}'.format(p_final))
    print(p)
    exit(0)
   
   
    fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(8,3))

    tit = str(os.path.basename(filename))
    tit = tit.replace(".csv", "")
    #fig.suptitle(tit)
    ax1.scatter(x, z,color="blue", label="original")


    #ax1.scatter(x0, z0, color="red", label="scale 1.3")
    #ax1.scatter(x1, z1, color="brown", label="scale 1.5")
    ax1.scatter(x2, z2, color="green", label="scale 2")
    #ax1.scatter(x3, z3,color="orange", label="scale 3")
    #ax1.scatter(x4, z4,color="pink", label="scale 4")
    #ax1.scatter(x5, z5,color="grey", label="scale 5")

    ax1.xaxis.set_ticks(np.arange(0, df["n_nodes"].max()+1, 20))
    ax1.yaxis.set_ticks(np.arange(0,df["influence"].max()+1, 100))
    ax1.set_xlabel("Nodes")

    ax1.set_ylabel("Influence")

    ax2.scatter(y, z ,color="blue")
    ax2.scatter(y0, z0 ,color="red")
    ax2.scatter(y1, z1 ,color="brown")
    ax2.scatter(y2, z2, color="green")
    ax2.scatter(y3, z3, color="orange")
    ax2.scatter(y4, z4,color="pink")
    ax2.scatter(y5, z5,color="grey")
    ax2.xaxis.set_ticks(np.arange(0, df["time"].max()+1, 1))
    ax2.yaxis.set_ticks(np.arange(0,df["influence"].max()+1, 100))
    ax2.set_xlabel("No Communities")

    ax2.set_ylabel("Influence")

    ax3.scatter(y, x, color="blue")
    ax3.scatter(y0, x0, color="red")
    ax3.scatter(y1, x1, color="brown")
    ax3.scatter(y2, x2, color="green")
    ax3.scatter(y3, x3, color="orange")
    ax3.scatter(y4, x4,color="pink")
    ax3.scatter(y5, x5,color="grey")
    ax3.yaxis.set_ticks(np.arange(0, df["n_nodes"].max()+1, 20))
    ax3.xaxis.set_ticks(np.arange(0,df["time"].max()+1, 1))
    ax3.set_xlabel("No Communities")

    ax3.set_ylabel("Nodes")

    ax1.set_box_aspect(1)
    ax2.set_box_aspect(1)
    ax3.set_box_aspect(1)
    fig.tight_layout()
    #ax1.legend(loc='center left')#, bbox_to_anchor=(0, -0.4))
    fig.legend(loc=1)
    #fig.savefig('Images/'+tit+'.png', format='png', dpi=100)

    plt.show()